{"uid":"2dd5ce6fe842c12d","name":"test_photo","fullName":"smok#test_photo","historyId":"66c318430d5b886ccbde178645bfa276","time":{"start":1745419127029,"stop":1745419127029,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\nStacktrace:\nUnknownError: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\n    at getResponseForW3CError (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\errors.js:1143:9)\n    at asyncHandler (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:487:57)","statusTrace":"@pytest.fixture(scope=\"function\")\n    def appium_driver():\n        \"\"\"Фикстура с полной переустановкой приложения для каждого теста\"\"\"\n        capabilities = {\n            \"platformName\": \"Android\",\n            \"automationName\": \"uiautomator2\",\n            \"deviceName\": \"Android\",\n            \"language\": \"en\",\n            \"locale\": \"US\",\n            \"noReset\": False,  # Разрешаем сброс состояния\n            \"fullReset\": False  # Не делаем полный сброс (мы сами управляем установкой)\n        }\n    \n        options = UiAutomator2Options().load_capabilities(capabilities)\n        driver = Remote('http://127.0.0.1:4723', options=options)\n        driver.implicitly_wait(20)\n    \n        try:\n            # Установка приложения перед тестом\n>           install_app(driver)\n\nsmok.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsmok.py:321: in install_app\n    appium_driver.install_app(apk_path)\n.venv\\Lib\\site-packages\\appium\\webdriver\\extensions\\applications.py:96: in install_app\n    self.assert_extension_exists(ext_name).execute_script(\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:528: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000220B135E650>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"An unknown server-side error occurred while pro...\\npm\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\@appium\\\\\\\\base-driver\\\\\\\\lib\\\\\\\\protocol\\\\\\\\protocol.js:487:57)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        if isinstance(payload, dict):\n            payload_dict = payload\n        else:\n            try:\n                payload_dict = json.loads(payload)\n            except (json.JSONDecodeError, TypeError):\n                return\n            if not isinstance(payload_dict, dict):\n                return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\nE       Stacktrace:\nE       UnknownError: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\nE           at getResponseForW3CError (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\errors.js:1143:9)\nE           at asyncHandler (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:487:57)\n\n.venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:125: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"cleanup_before_tests","time":{"start":1745419103248,"stop":1745419103254,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false},{"name":"appium_driver","time":{"start":1745419127029,"stop":1745419133151,"duration":6122},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\nStacktrace:\nUnknownError: An unknown server-side error occurred while processing the command. Original error: The application at 'C:/adengi/adengi-dev-2.apk' does not exist or is not accessible\n    at getResponseForW3CError (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\errors.js:1143:9)\n    at asyncHandler (C:\\Users\\v.tatarnikov\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\protocol\\protocol.js:487:57)\n","statusTrace":"  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\smok.py\", line 71, in appium_driver\n    install_app(driver)\n    ~~~~~~~~~~~^^^^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\smok.py\", line 321, in install_app\n    appium_driver.install_app(apk_path)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\appium\\webdriver\\extensions\\applications.py\", line 96, in install_app\n    self.assert_extension_exists(ext_name).execute_script(\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n        'mobile: installApp',\n        ^^^^^^^^^^^^^^^^^^^^^\n    ...<4 lines>...\n        },\n        ^^\n    )\n    ^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 528, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\v.tatarnikov\\PycharmProjects\\PythonProject\\.venv\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py\", line 125, in check_response\n    raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"cleanup_before_tests::0","time":{"start":1745419160592,"stop":1745419160592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"smok"},{"name":"host","value":"V_TATARNIKOV"},{"name":"thread","value":"11484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"smok"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"2dd5ce6fe842c12d.json","parameterValues":[]}